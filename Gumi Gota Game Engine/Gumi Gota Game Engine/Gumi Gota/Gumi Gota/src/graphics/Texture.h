#ifndef GUMIGOTA_TEXTURE_H
#define GUMIGOTA_TEXTURE_H



/* INCLUDES */
// Normal Includes
#include <string>



namespace gg
{

	class Texture
	{
	private:
		/* Variables */
		unsigned int m_textureID;

		int m_width, m_height;

		unsigned int m_atlasRows;

	public:
		/* Constructors */
		Texture(const std::string& filepath); //default constructor
		Texture(const std::string& filepath, const unsigned int atlasRows); //constructor for texture atlas; atlasRows is amount of rows and columns of texture atlas

		Texture(const unsigned int textureID, const unsigned int width, const unsigned int height); //constructor for opengl textures; textureID is id of a texture generated by opengl

		/* Destructor */
		~Texture();

		/* Functions */
		void bind() const;
		void bind(const unsigned int slot) const;
		static void unbind();

		// Setters
		void setAtlasRows(const unsigned int amount);

		// Getters
		inline unsigned int getID() const { return m_textureID; }

		inline int getWidth() const { return m_width; }
		inline int getHeight() const { return m_height; }

		inline unsigned int getAtlasRows() const { return m_atlasRows; }

	private:
		// Private Functions
		void m_loadImage(const std::string& filepath);

	};

}



#endif